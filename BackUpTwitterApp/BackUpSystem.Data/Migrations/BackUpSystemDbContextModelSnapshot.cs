// <auto-generated />
using BackUpSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BackUpSystem.Data.Migrations
{
    [DbContext(typeof(BackUpSystemDbContext))]
    partial class BackUpSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackUpSystem.Data.Models.Tweet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<int>("FavoriteCount");

                    b.Property<string>("IdString");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Language");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<int>("ReTweetCount");

                    b.Property<string>("Text");

                    b.Property<int>("TweetId");

                    b.Property<int?>("TwitterAccountId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TwitterAccountId");

                    b.HasIndex("UserId");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("BackUpSystem.Data.Models.TwitterAccount", b =>
                {
                    b.Property<int>("TwitterAccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("FavouritesCount");

                    b.Property<int>("FollowerCount");

                    b.Property<int>("FriendsCount");

                    b.Property<string>("ImageUrl");

                    b.Property<int>("ListedCount");

                    b.Property<string>("Name");

                    b.Property<string>("ScreenName");

                    b.Property<int>("StatusesCount");

                    b.Property<string>("TwitterIdStr");

                    b.Property<int?>("UserId");

                    b.HasKey("TwitterAccountId");

                    b.HasIndex("UserId");

                    b.ToTable("TwitterAccounts");
                });

            modelBuilder.Entity("BackUpSystem.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100);

                    b.Property<string>("Id");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .HasMaxLength(100);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("ReTweetsCount");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackUpSystem.Data.Models.Tweet", b =>
                {
                    b.HasOne("BackUpSystem.Data.Models.TwitterAccount", "TwitterAccount")
                        .WithMany("Tweets")
                        .HasForeignKey("TwitterAccountId");

                    b.HasOne("BackUpSystem.Data.Models.User", "User")
                        .WithMany("Tweets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BackUpSystem.Data.Models.TwitterAccount", b =>
                {
                    b.HasOne("BackUpSystem.Data.Models.User", "User")
                        .WithMany("FavoriteTwitterAccounts")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
